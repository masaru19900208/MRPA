<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAA0QAAAPoAAAB6AAAA2QAAAPcAAABJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2AAAA/wAAAPMAAAD/AAAAtgAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAADaAAAA/wAA
        APkAAABVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIMAAAD/AAAAwQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAKgAAAN0AAABjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAbAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAPwH4AB8B8AAfAfAADwDgAA4A4AAEAEAAAAAAAAAAACAAAAAgAAAAIAA
        AADAAAAAgABAAIAA4ACAAfAAgAHwAIAA4ACAAAAAgAAAAIAAAADAAAAAwAAAAOAAAAD4AAAD/+AA///g
        AP//8AD///AB///4Af//+AP///wD///8B/8=
</value>
  </data>
</root>
